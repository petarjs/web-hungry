!function(){function configure($stateProvider,$urlRouterProvider,$urlMatcherFactoryProvider,$mdThemingProvider){$urlRouterProvider.otherwise("/"),$urlMatcherFactoryProvider.strictMode(!1),$stateProvider.state("login",{url:"/login",templateUrl:"login/login",role:""}).state("app",{url:"/","abstract":!0,template:"<div ui-view></div>",controller:"AppController",resolve:{user:function(Users,Loader){return Loader.start(),Users.getUser(window.userId).then(function(r){return Loader.stop(),r})},roles:function(Roles,Loader){return Loader.start(),Roles.getRoles().then(function(r){return Loader.stop(),r})},foods:function(Foods,Loader){return Loader.start(),Foods.getFoods().then(function(r){return Loader.stop(),r})}}}).state("app.home",{url:"",templateUrl:"home/home",role:""}).state("app.admin-dashboard",{url:"admin/dashboard",controller:"DashboardController as vm",templateUrl:"admin/dashboard/dashboard",role:"admin"}).state("app.settings",{url:"admin/settings",controller:"SettingsController as vm",templateUrl:"admin/settings/settings",role:"admin"}).state("app.users",{url:"users",controller:"UsersController as vm",templateUrl:"super-admin/users/users",role:"super-admin"}).state("app.food",{url:"food",controller:"FoodController as vm",templateUrl:"admin/food/food",role:"admin"}).state("app.food-create",{url:"food/create",controller:"FoodCreateController as vm",templateUrl:"admin/food/create",role:"admin"}).state("app.food-edit",{url:"food/edit/:id",controller:"FoodCreateController as vm",templateUrl:"admin/food/create",role:"admin"}).state("app.menus",{url:"menus",controller:"MenuController as vm",templateUrl:"admin/menu/menu",role:"admin"}).state("app.order-food",{url:"order-food",controller:"OrderFoodController as vm",templateUrl:"user/food",role:"user"}).state("app.orders",{url:"admin/orders",controller:"AdminOrdersController as vm",templateUrl:"admin/orders/orders",role:"admin"}).state("app.catering",{url:"admin/catering/:week",controller:"AdminCateringController as vm",templateUrl:"admin/catering/catering",role:"admin"}),$mdThemingProvider.theme("default").primaryPalette("orange").accentPalette("lime")}function appRun($rootScope,$state,Auth,$http,$window,appConfig,Loader){function getDayName(day){return moment(day).format("ddd")}function getPhpWeek(week){return week/1e3}$http.defaults.headers.common["X-CSRF-TOKEN"]=$window.csrfToken,$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){toState.role&&!Auth.hasRole(toState.role)&&($state.transitionTo("login"),event.preventDefault())}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){console.log(arguments)}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams){console.log(arguments)}),$rootScope.helpers={hasRole:Auth.hasRole,getDayName:getDayName,size:_.size,loader:Loader,getPhpWeek:getPhpWeek,appConfig:appConfig}}angular.module("Hungry.core.auth",[]),angular.module("Hungry.core.state",[]),angular.module("Hungry.core.app-state",[]),angular.module("Hungry.core.config",[]),angular.module("Hungry.core.loader",[]),angular.module("Hungry.core.api-helpers",[]),angular.module("Hungry.core.url-replacer",[]),angular.module("Hungry.core.api.users",[]),angular.module("Hungry.core.api.roles",[]),angular.module("Hungry.core.api.foods",[]),angular.module("Hungry.core.api.menus",[]),angular.module("Hungry.core.api.orders",[]),angular.module("Hungry.core.api.settings",[]),angular.module("Hungry.app",[]),angular.module("Hungry.super-admin.users",[]),angular.module("Hungry.admin.food",[]),angular.module("Hungry.admin.menus",[]),angular.module("Hungry.admin.orders",[]),angular.module("Hungry.admin.dashboard",[]),angular.module("Hungry.admin.settings",[]),angular.module("Hungry.admin.catering",[]),angular.module("Hungry.user.food",[]),angular.module("Hungry",["ui.router","file-data-url","oitozero.ngSweetAlert","hungry.templates","ngMaterial","angular-svg-round-progress","timer","Hungry.core.auth","Hungry.core.state","Hungry.core.app-state","Hungry.core.config","Hungry.core.loader","Hungry.core.api-helpers","Hungry.core.url-replacer","Hungry.core.api.users","Hungry.core.api.roles","Hungry.core.api.foods","Hungry.core.api.menus","Hungry.core.api.orders","Hungry.core.api.settings","Hungry.app","Hungry.super-admin.users","Hungry.admin.food","Hungry.admin.menus","Hungry.user.food","Hungry.admin.orders","Hungry.admin.dashboard","Hungry.admin.settings","Hungry.admin.catering"]).config(configure).run(appRun)}(),function(){function AppController(AppState,Auth,user,roles,foods,$state){function activate(){changeUser(user),changeRoles(roles),changeFoods(foods)}user.roles&&user.roles.length||(window.location.href="/auth/login"),$state.is("app.home")&&(Auth.hasRole("admin")?$state.go("app.admin-dashboard"):Auth.hasRole("user")&&$state.go("app.order-food"));var state={},changeUser=AppState.change("user"),changeRoles=AppState.change("roles"),changeFoods=AppState.change("foods");AppState.listen("user",function(user){state.user=user}),AppState.listen("roles",function(roles){state.roles=roles}),AppState.listen("foods",function(foods){state.foods=foods}),activate()}angular.module("Hungry.app").controller("AppController",AppController)}(),function(){function ApiHelpers(){function extractData(response){return response.data}function handleError(error){return console.log(error),error}return{extractData:extractData,handleError:handleError}}angular.module("Hungry.core.api-helpers").service("ApiHelpers",ApiHelpers)}(),angular.module("Hungry.core.app-state").factory("AppState",function(StateService){var state={user:{},users:[],roles:[],foods:[],menus:[],orders:[],userOrders:[],foodOrders:[],usersIncompleteOrders:[],settings:{}},listeners=[],get=StateService.get(state),change=StateService.change(state,listeners),listen=StateService.listen(state,listeners);return{get:get,change:change,listen:listen}}),function(){angular.module("Hungry.core.config").constant("appConfig",{api:window.api,date:{format:"DD.MM.YY.",formatServer:"YYYY-MM-DD 00:00:00"}})}(),angular.module("Hungry.core.state").factory("StateService",function(){function get(state){return function(){return clone(state)}}function getStateProp(state,prop){return clone(state[prop])}var clone=R.clone,curry=R.curry,filter=R.filter,change=curry(function(state,listeners,prop,data){var sameProp=filter(function(l){return l.prop===prop});return state[prop]=data,R.forEach(function(listener){listener.action(getStateProp(state,listener.prop))},sameProp(listeners)),getStateProp(state,prop)}),listen=curry(function(state,listeners,prop,action){var listener={prop:prop,action:action};listeners.push(listener);var unsubscribe=function(){return listeners.splice(listeners.indexOf(listener),1)};return action(getStateProp(state,prop)),unsubscribe});return{get:get,change:change,listen:listen}}),function(){function UrlReplacer(){function setPlaceholderSymbol(symbol){placeholderSymbol=symbol}function replaceParams(url,data){var joinedKeys=_.map(_.keys(data),function(key){return placeholderSymbol+key}).join("|"),re=new RegExp(joinedKeys,"gi");return url.replace(re,function(matched){return data[matched.replace(placeholderSymbol,"")]})}var placeholderSymbol=":";return{setPlaceholderSymbol:setPlaceholderSymbol,replaceParams:replaceParams}}angular.module("Hungry.core.url-replacer").service("UrlReplacer",UrlReplacer)}(),function(){function OrderFoodController($scope,AppState,user,$window,appConfig,Menus,Orders,$q,Loader){function activate(){Loader.start();var menusLoading=Menus.getMenusForUser(vm.week.valueOf()).then(changeMenus),ordersLoading=Orders.getOrders(vm.week.valueOf(),user).then(changeOrders);$q.all([menusLoading,ordersLoading]).then(function(){Loader.stop()})}function setNextWeek(){vm.week=moment(vm.week).add(1,"weeks").startOf("isoWeek")}function setPrevWeek(){vm.week=moment(vm.week).subtract(1,"weeks").startOf("isoWeek")}function isOldMenu(menu){return 1e3*parseInt(menu.week,10)<moment().startOf("isoWeek").valueOf()}function getMenuFoodsForDay(dayIndex){var day=vm.week.clone().add(dayIndex,"days").format(appConfig.date.formatServer),menu=_.findWhere(vm.state.menus,{date:day});return menu?menu.menu_foods:[]}function getOrderedForDay(dayIndex){var day=vm.week.clone().add(dayIndex,"days").format(appConfig.date.formatServer),ordered=_.find(vm.state.orders,function(menuFood){return menuFood.menu&&menuFood.menu.date===day});return ordered?ordered:null}function orderMenuFood(menuFood){Orders.orderMenuFood(menuFood,user).then(changeOrders)}function updateTabs(){_.each(vm.dayTabs,function(tab,index){tab.menuFoods=vm.getMenuFoodsForDay(index),tab.orderedForDay=getOrderedForDay(index)})}var vm=this,state={};vm.state=state,vm.dayTabs=[{title:"Mon"},{title:"Tue"},{title:"Wed"},{title:"Thu"},{title:"Fri"}],vm.week=moment().add(1,"week").startOf("isoWeek"),vm.selectedTabIndex=moment().isoWeekday()-1,vm.orderingAllowed=!0,vm.orderDeadline=moment().add(4,"days").endOf("day"),moment().isAfter(vm.orderDeadline)&&vm.orderDeadline.add(1,"week"),vm.selectedTabIndex>4&&(vm.week=vm.week.add(1,"week"),vm.selectedTabIndex=0),vm.setNextWeek=setNextWeek,vm.setPrevWeek=setPrevWeek,vm.getMenuFoodsForDay=getMenuFoodsForDay,vm.isOldMenu=isOldMenu,vm.orderMenuFood=orderMenuFood,vm.getOrderedForDay=getOrderedForDay;var changeMenus=AppState.change("menus"),changeOrders=AppState.change("orders");AppState.listen("menus",function(menus){state.menus=menus,updateTabs()}),AppState.listen("orders",function(orders){state.orders=orders,updateTabs()}),$scope.$watch(function(){return vm.week},function(){vm.weekStart=vm.week.format(appConfig.date.format),vm.weekEnd=moment(vm.week).add(4,"days").format(appConfig.date.format);var isCurrentWeek=moment().isBetween(vm.week,moment(vm.week).add(4,"days"));isCurrentWeek?vm.selectedTabIndex=moment().isoWeekday()-1:vm.selectedTabIndex=0,vm.week.isAfter(moment(),"day")?vm.orderingAllowed=!0:vm.orderingAllowed=!1,activate()})}angular.module("Hungry.user.food").controller("OrderFoodController",OrderFoodController)}(),function(){"use strict";function AdminCateringController($sce,Orders,$state,$stateParams,Loader,SweetAlert){function activate(){vm.week=$stateParams.week,getHtmlEmail(vm.week)}function getHtmlEmail(week){Loader.start(),Orders.getCateringEmail(week).then(function(emailHtml){vm.trustedHtmlEmail=$sce.trustAsHtml(emailHtml)}).then(Loader.stop)}function sendEmail(week){Loader.isLoading()||SweetAlert.swal({title:"Send email to catering?",text:"Are you sure you want to send this order email to catering?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, send it!",closeOnConfirm:!1,showLoaderOnConfirm:!0},function(shouldSend){shouldSend&&Orders.sendCateringEmail(week).then(function(){SweetAlert.swal("Email sent!")},function(){SweetAlert.swal("Error!")})})}function goToDashboard(){$state.go("app.admin-dashboard")}var vm=this;vm.trustedHtmlEmail="",vm.sendEmail=sendEmail,vm.goToDashboard=goToDashboard,activate()}angular.module("Hungry.admin.catering").controller("AdminCateringController",AdminCateringController)}(),function(){"use strict";function DashboardController($scope,user,Orders,appConfig,AppState,Loader){function activate(){vm.getOrderNumbersForWeek(),vm.getFoodOrdersForWeek(),vm.getUsersWithIncompleteOrders()}function setNextWeek(){vm.week=moment(vm.week).add(1,"weeks").startOf("isoWeek")}function setPrevWeek(){vm.week=moment(vm.week).subtract(1,"weeks").startOf("isoWeek")}function getNoOrdersForDay(week,day){return 3*day+10}function getFoodOrdersForWeek(){Loader.start(),Orders.getFoodOrdersForWeek(vm.week.valueOf()).then(changeFoodOrders).then(Loader.stop)}function getFoodOrderPercentage(food){return vm.totalFoodOrders&&0!==vm.totalFoodOrders?food.num_orders/vm.totalFoodOrders*100:0}function getTotalOrdersNo(){return _.sum(vm.state.foodOrders,"num_orders")}function getOrderNumbersForWeek(week){Loader.start(),Orders.getOrderNumbersForWeek(vm.week.valueOf()).then(function(orderNumbers){vm.numOrders=orderNumbers.num_orders,vm.numTotalOrders=orderNumbers.num_total_orders}).then(Loader.stop)}function getUsersWithIncompleteOrders(){Loader.start(),Orders.getUsersWithIncompleteOrders(vm.week.valueOf()).then(changeUsersIncompleteOrders).then(Loader.stop)}var vm=this,state={};vm.state=state;var changeFoodOrders=AppState.change("foodOrders");AppState.listen("foodOrders",function(foodOrders){state.foodOrders=foodOrders,vm.totalFoodOrders=getTotalOrdersNo()});var changeUsersIncompleteOrders=AppState.change("usersIncompleteOrders");AppState.listen("usersIncompleteOrders",function(usersIncompleteOrders){state.usersIncompleteOrders=usersIncompleteOrders}),vm.user=user,vm.numOrders=0,vm.numTotalOrders=0,vm.days=[{title:"Mon"},{title:"Tue"},{title:"Wed"},{title:"Thu"},{title:"Fri"}],vm.week=moment().startOf("isoWeek"),vm.day=moment().isoWeekday()-1,vm.day>4&&(vm.week=vm.week.add(1,"week"),vm.day=0),vm.setNextWeek=setNextWeek,vm.setPrevWeek=setPrevWeek,vm.getNoOrdersForDay=getNoOrdersForDay,vm.getFoodOrdersForWeek=getFoodOrdersForWeek,vm.getFoodOrderPercentage=getFoodOrderPercentage,vm.getOrderNumbersForWeek=getOrderNumbersForWeek,vm.getUsersWithIncompleteOrders=getUsersWithIncompleteOrders,vm.sendMenuToCatering=sendMenuToCatering,$scope.$watch(function(){return vm.week},function(){vm.weekStart=vm.week.format(appConfig.date.format),vm.weekEnd=moment(vm.week).add(4,"days").format(appConfig.date.format),moment().isBetween(vm.week,moment(vm.week).add(4,"days"))?vm.day=moment().isoWeekday()-1:vm.day=0,activate()})}function sendMenuToCatering(week){}angular.module("Hungry.admin.dashboard").controller("DashboardController",DashboardController)}(),function(){function ChooseFoodController($scope,AppState,Users,$window,Foods,SweetAlert,$mdDialog,appConfig,menu){function activate(){}function hide(){$mdDialog.hide()}function cancel(){$mdDialog.cancel()}function selectFood(food){$mdDialog.hide(food)}function isAlreadySelected(food){return _.some(menu.menu_foods,function(menuFood){return menuFood.food.id===food.id})}var vm=this,state={};AppState.change("foods");vm.state=state,vm.menu=menu,vm.menuDate=moment(menu.date).format(appConfig.date.format),vm.hide=hide,vm.cancel=cancel,vm.selectFood=selectFood,vm.isAlreadySelected=isAlreadySelected,AppState.listen("foods",function(foods){vm.state.foods=foods}),activate()}angular.module("Hungry.admin.food").controller("ChooseFoodController",ChooseFoodController)}(),function(){function FoodCreateController($rootScope,$stateParams,AppState,Users,user,$window,Foods,$state,Loader){function activate(){}function saveFood(food){Loader.start(),Foods.saveFood(food).then(function(){Foods.getFoods().then(changeFoods).then(function(){Loader.stop(),$state.go("app.food")})})}var vm=this,state={},changeFoods=AppState.change("foods"),isEdit=$stateParams.id;vm.state=state,vm.food={description:"",image:""},isEdit&&Foods.getFood($stateParams.id).then(function(food){vm.food=food}),vm.isEdit=isEdit,vm.saveFood=saveFood,activate()}angular.module("Hungry.admin.food").controller("FoodCreateController",FoodCreateController)}(),function(){function FoodController($scope,AppState,Users,user,$window,Foods,SweetAlert,Loader,$mdBottomSheet){function activate(){Foods.getFoods().then(changeFoods)}function deleteFood(food){SweetAlert.swal({title:"Delete this food?",text:"Your will not be able to recover this!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, delete it!",closeOnConfirm:!1,showLoaderOnConfirm:!0},function(shouldDelete){shouldDelete&&Foods.deleteFood(food).then(function(){Foods.getFoods().then(changeFoods).then(function(){SweetAlert.swal("Delete successful!")})})})}function toggleDefault(food){Loader.start(),Foods.toggleDefault(food).then(Loader.stop)}var vm=this,state={},changeFoods=AppState.change("foods");vm.state=state,vm.deleteFood=deleteFood,vm.toggleDefault=toggleDefault,AppState.listen("foods",function(foods){state.foods=foods}),activate()}angular.module("Hungry.admin.food").controller("FoodController",FoodController)}(),function(){function MenuController($scope,AppState,appConfig,user,$window,Foods,Menus,SweetAlert,$mdDialog,Loader){function activate(){vm.loading=!0,Loader.start(),Menus.getMenus(vm.week.valueOf()).then(changeMenus).then(function(){vm.loading=!1,Loader.stop()})}function setNextWeek(){vm.week=moment(vm.week).add(1,"weeks").startOf("isoWeek")}function setPrevWeek(){vm.week=moment(vm.week).subtract(1,"weeks").startOf("isoWeek")}function showFoodDialog(menu,ev){$mdDialog.show({controller:"ChooseFoodController as vm",templateUrl:"admin/food/choose",parent:angular.element(document.body),targetEvent:ev,clickOutsideToClose:!0,locals:{menu:menu}}).then(function(food){vm.loading=!0,Loader.start(),Menus.addFoodToMenu(menu,food).then(changeMenus).then(function(){vm.loading=!1,Loader.stop()})},function(){})}function publishMenus(week){SweetAlert.swal({title:"Publish menus for this week?",text:"When you publish the menus, users will be able to see them and order food.",type:"info",showCancelButton:!0,confirmButtonText:"Publish",closeOnConfirm:!1,showLoaderOnConfirm:!0},function(shouldPublish){shouldPublish&&Menus.publishMenus(week).then(vm.changeMenus).then(function(){SweetAlert.swal("Menus published!")})})}function checkMenusPublished(){vm.menusPublished=_.all(vm.state.menus,function(menu){return menu.published})}function removeMenuFood(menuFood){vm.loading=!0,Loader.start(),Menus.removeMenuFood(menuFood).then(vm.changeMenus).then(function(){vm.loading=!1,Loader.stop()})}function isOldMenu(menu){return 1e3*parseInt(menu.week,10)<moment().startOf("isoWeek").valueOf()}var vm=this,state={},changeMenus=(AppState.change("users"),AppState.change("foods"),AppState.change("menus"));vm.changeMenus=changeMenus,vm.state=state,vm.loading=!1,vm.menusPublished=!1,vm.week=moment().add(1,"week").startOf("isoWeek"),vm.day=moment().isoWeekday()-1,vm.day>4&&(vm.week=vm.week.add(1,"week")),vm.showFoodDialog=showFoodDialog,vm.setNextWeek=setNextWeek,vm.setPrevWeek=setPrevWeek,vm.publishMenus=publishMenus,vm.removeMenuFood=removeMenuFood,vm.isOldMenu=isOldMenu,AppState.listen("foods",function(foods){state.foods=foods}),AppState.listen("menus",function(menus){state.menus=menus,checkMenusPublished()}),$scope.$watch(function(){return vm.week},function(){vm.weekStart=vm.week.format(appConfig.date.format),vm.weekEnd=moment(vm.week).add(4,"days").format(appConfig.date.format),activate()})}angular.module("Hungry.admin.menus").controller("MenuController",MenuController)}(),function(){"use strict";function AdminOrdersController($scope,Loader,Orders,appConfig,AppState){function activate(){Loader.start(),Orders.getUserOrders(vm.week.valueOf()).then(changeUserOrders).then(Loader.stop)}function setNextWeek(){vm.week=moment(vm.week).add(1,"weeks").startOf("isoWeek")}function setPrevWeek(){vm.week=moment(vm.week).subtract(1,"weeks").startOf("isoWeek")}function getOrderedFoodForDay(user){var day=vm.week.clone().add(vm.day,"days").format(appConfig.date.formatServer),orderedMenuFood=_.find(user.menu_foods,function(menuFood){return menuFood.menu&&menuFood.menu.date===day});return orderedMenuFood?orderedMenuFood:null}var vm=this,state={},changeUserOrders=AppState.change("userOrders");AppState.listen("userOrders",function(userOrders){state.userOrders=userOrders}),vm.state=state,vm.days=[{title:"Mon"},{title:"Tue"},{title:"Wed"},{title:"Thu"},{title:"Fri"}],vm.week=moment().add(1,"week").startOf("isoWeek"),vm.day=moment().isoWeekday()-1,vm.day>4&&(vm.week=vm.week.add(1,"week"),vm.day=0),vm.setNextWeek=setNextWeek,vm.setPrevWeek=setPrevWeek,vm.getOrderedFoodForDay=getOrderedFoodForDay,$scope.$watch(function(){return vm.week},function(){vm.weekStart=vm.week.format(appConfig.date.format),vm.weekEnd=moment(vm.week).add(4,"days").format(appConfig.date.format),moment().isBetween(vm.week,moment(vm.week).add(4,"days"))?vm.day=moment().isoWeekday()-1:vm.day=0,activate()})}angular.module("Hungry.admin.orders").controller("AdminOrdersController",AdminOrdersController)}(),function(){"use strict";function SettingsController(Settings,AppState,Loader){function activate(){getSettings()}function saveCateringEmail(email){Loader.start(),Settings.setSettings({catering_email:email}).then(changeSettings).then(Loader.stop)}function getSettings(){Loader.start(),Settings.getSettings().then(changeSettings).then(Loader.stop)}var vm=this;vm.state={};var changeSettings=AppState.change("settings");AppState.listen("settings",function(settings){vm.state.settings=settings}),vm.saveCateringEmail=saveCateringEmail,activate()}angular.module("Hungry.admin.settings").controller("SettingsController",SettingsController)}(),function(){function FoodsFactory($http,appConfig,UrlReplacer,ApiHelpers){function saveFood(food){return food.id?updateFood(food):createFood(food)}function createFood(food){var url=appConfig.api.concat("/admin/food/create");return $http.post(url,food).then(ApiHelpers.extractData,ApiHelpers.handleError)}function updateFood(food){var url=appConfig.api.concat("/admin/food/:id"),realUrl=UrlReplacer.replaceParams(url,{id:food.id});return $http.put(realUrl,food).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getFoods(){var url=appConfig.api.concat("/admin/food");return $http.get(url).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getFood(id){var url=appConfig.api.concat("/admin/food/:id"),realUrl=UrlReplacer.replaceParams(url,{id:id});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function deleteFood(food){var url=appConfig.api.concat("/admin/food/:id"),realUrl=UrlReplacer.replaceParams(url,{id:food.id});return $http["delete"](realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function toggleDefault(food){var url=appConfig.api.concat("/admin/food/:id/toggle-default"),realUrl=UrlReplacer.replaceParams(url,{id:food.id});return $http.put(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError).then(function(updatedFood){food["default"]=!food["default"]})}return{saveFood:saveFood,getFoods:getFoods,getFood:getFood,deleteFood:deleteFood,toggleDefault:toggleDefault}}angular.module("Hungry.core.api.foods").factory("Foods",FoodsFactory)}(),function(){function MenusFactory($http,appConfig,UrlReplacer,ApiHelpers){function getMenus(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/menus?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getMenusForUser(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/menus/user?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function addFoodToMenu(menu,food){var url=appConfig.api.concat("/admin/menus/:id?food_id=:foodId"),realUrl=UrlReplacer.replaceParams(url,{id:menu.id,foodId:food.id});return $http.put(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function publishMenus(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/menus/publish?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.post(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function removeMenuFood(menuFood){var url=appConfig.api.concat("/admin/menus/food/:id"),realUrl=UrlReplacer.replaceParams(url,{id:menuFood.id});return $http["delete"](realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}return{getMenus:getMenus,getMenusForUser:getMenusForUser,addFoodToMenu:addFoodToMenu,publishMenus:publishMenus,removeMenuFood:removeMenuFood}}angular.module("Hungry.core.api.menus").factory("Menus",MenusFactory)}(),function(){function OrdersFactory($http,appConfig,UrlReplacer,ApiHelpers){function getOrders(week,user){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders?week=:week&user_id=:userId"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek,userId:user.id});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function orderMenuFood(menuFood,user){var url=appConfig.api.concat("/admin/orders/create?menu_food_id=:menuFoodId&user_id=:userId"),realUrl=UrlReplacer.replaceParams(url,{menuFoodId:menuFood.id,userId:user.id});return $http.post(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getUserOrders(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders/users?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getFoodOrdersForWeek(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders/food?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getOrderNumbersForWeek(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders/numbers?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getUsersWithIncompleteOrders(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders/incomplete?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getCateringEmail(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders/get-catering-email?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function sendCateringEmail(week){var phpWeek=week/1e3,url=appConfig.api.concat("/admin/orders/send-catering-email?week=:week"),realUrl=UrlReplacer.replaceParams(url,{week:phpWeek});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}return{getOrders:getOrders,orderMenuFood:orderMenuFood,getUserOrders:getUserOrders,getFoodOrdersForWeek:getFoodOrdersForWeek,getOrderNumbersForWeek:getOrderNumbersForWeek,getUsersWithIncompleteOrders:getUsersWithIncompleteOrders,getCateringEmail:getCateringEmail,sendCateringEmail:sendCateringEmail}}angular.module("Hungry.core.api.orders").factory("Orders",OrdersFactory)}(),function(){function RolesFactory($http,appConfig,UrlReplacer,ApiHelpers){function getRoles(){var url=appConfig.api.concat("/roles");return $http.get(url,{cache:!0}).then(ApiHelpers.extractData,ApiHelpers.handleError)}return{getRoles:getRoles}}angular.module("Hungry.core.api.roles").factory("Roles",RolesFactory)}(),function(){function SettingsFactory($http,appConfig,UrlReplacer,ApiHelpers){function getSettings(){var url=appConfig.api.concat("/admin/settings");return $http.get(url,{cache:!0}).then(ApiHelpers.extractData,ApiHelpers.handleError)}function setSettings(settings){var url=appConfig.api.concat("/admin/settings");return $http.post(url,settings).then(ApiHelpers.extractData,ApiHelpers.handleError)}return{getSettings:getSettings,setSettings:setSettings}}angular.module("Hungry.core.api.settings").factory("Settings",SettingsFactory)}(),function(){function UsersFactory($http,appConfig,UrlReplacer,ApiHelpers){function getUser(id){var url=appConfig.api.concat("/users/:id"),realUrl=UrlReplacer.replaceParams(url,{id:id});return $http.get(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}function getUsers(){var url=appConfig.api.concat("/users");return $http.get(url).then(ApiHelpers.extractData,ApiHelpers.handleError)}function toggleRole(user,role){var url=appConfig.api.concat("/users/:id/toggle-role/:roleId"),realUrl=UrlReplacer.replaceParams(url,{id:user.id,roleId:role.id});return $http.put(realUrl).then(ApiHelpers.extractData,ApiHelpers.handleError)}return{getUser:getUser,getUsers:getUsers,toggleRole:toggleRole}}angular.module("Hungry.core.api.users").factory("Users",UsersFactory)}(),function(){function Auth($window){function hasRole(role,user){return user?!!_.findWhere(user.roles,{name:role}):-1!==roles.indexOf(role)}var roles=$window.roles?$window.roles.split(","):[];return{hasRole:hasRole}}angular.module("Hungry.core.auth").service("Auth",Auth)}(),function(){"use strict";function LoaderService($mdToast){function start(){0===loaderCount&&$mdToast.show(toastConfig),loaderCount++}function stop(){0!==loaderCount&&(loaderCount--,0===loaderCount&&$mdToast.hide())}function isLoading(){return loaderCount>0}var toastConfig={position:"top right",parent:angular.element(document.body),templateUrl:"core/loader/loader",hideDelay:!1},loaderCount=0;return{start:start,stop:stop,isLoading:isLoading}}angular.module("Hungry.core.loader").service("Loader",LoaderService)}(),function(){function UsersController(AppState,Users,user,$window){function activate(){Users.getUsers().then(changeUsers)}function isCurrentUser(user){return user.id.toString()===$window.userId}function toggleRole(user,role){Users.toggleRole(user,role).then(function(user){var oldUser=_.findWhere(state.users,{id:user.id});oldUser.roles=user.roles,changeUsers(state.users)})}var vm=this,state={},changeUsers=AppState.change("users");vm.state=state,vm.isCurrentUser=isCurrentUser,vm.toggleRole=toggleRole,AppState.listen("users",function(users){state.users=users}),AppState.listen("roles",function(roles){state.roles=roles}),activate()}angular.module("Hungry.super-admin.users").controller("UsersController",UsersController)}();